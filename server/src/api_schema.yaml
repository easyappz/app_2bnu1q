version: 1.0
basePath: /api
endpoints:
  - method: POST
    path: /auth/register-admin
    description: One-time admin registration. If an admin already exists, returns an error.
    headers: {}
    request:
      body:
        type: object
        required:
          - email
          - password
        properties:
          email:
            type: string
            example: admin@example.com
          password:
            type: string
            example: strongpassword
    responses:
      201:
        description: Admin created
        body:
          ok: true
          user:
            email: string
            role: string
      400:
        description: Validation error or admin already exists
        body:
          ok: false
          error: string
      500:
        description: Server error
        body:
          ok: false
          error: string
  - method: POST
    path: /auth/login
    description: Admin login. Returns JWT token and user info.
    headers: {}
    request:
      body:
        type: object
        required:
          - email
          - password
        properties:
          email:
            type: string
            example: admin@example.com
          password:
            type: string
            example: strongpassword
    responses:
      200:
        description: Authenticated
        body:
          ok: true
          token: string
          user:
            email: string
            role: string
      400:
        description: Missing credentials
        body:
          ok: false
          error: string
      401:
        description: Invalid credentials
        body:
          ok: false
          error: string
      500:
        description: Server error
        body:
          ok: false
          error: string
  - method: GET
    path: /settings
    description: Get current settings. If none exist, a default record is created and returned.
    headers:
      Authorization:
        required: true
        description: Bearer <JWT token>
    request:
      query: {}
    responses:
      200:
        description: Current settings
        body:
          ok: true
          data:
            type: object
            properties:
              _id: string
              botToken: string
              providerToken: string
              channelId: string
              channelUsername: string
              productName: string
              priceCents: number
              currency: string
              description: string
              webhookUrl: string
              createdAt: string
              updatedAt: string
      401:
        description: Unauthorized
        body:
          ok: false
          error: string
      500:
        description: Server error
        body:
          ok: false
          error: string
  - method: PUT
    path: /settings
    description: Update settings. Validates payment fields (providerToken, productName, priceCents, currency).
    headers:
      Authorization:
        required: true
        description: Bearer <JWT token>
    request:
      body:
        type: object
        properties:
          botToken: string
          providerToken: string
          channelId: string
          channelUsername: string
          productName: string
          priceCents: number
          currency: string
          description: string
          webhookUrl: string
    responses:
      200:
        description: Updated settings
        body:
          ok: true
          data:
            type: object
      400:
        description: Validation error
        body:
          ok: false
          error: string
      401:
        description: Unauthorized
        body:
          ok: false
          error: string
      500:
        description: Server error
        body:
          ok: false
          error: string
